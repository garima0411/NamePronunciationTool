@{
    ViewData["Title"] = "Employee Profile";
}
@using Microsoft.AspNetCore.Http;


<html>
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>Material Design for Bootstrap</title>
    <!-- MDB icon -->
    <link rel="icon" href="~/img/mdb-favicon.ico" type="image/x-icon" />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" />
    <!-- Google Fonts Roboto -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap" />
    <!-- MDB -->
    <link rel="stylesheet" href="~/css/bootstrap-profiles.min.css" />
    <link rel="stylesheet" href="~/css/styles.css">
    <script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
    <script type="text/javascript" src="js/site.js"></script>
</head>

<body>
    <section style="background-color: #eee;">
        <div class="container-fluid p-2">
            <!-- Start your project here-->
            <div class="row">
                <div class="col">
                    <nav aria-label="breadcrumb" class="bg-light rounded-3 p-3 mb-4">
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item"><a href="/">Home</a></li>
                            <li class="breadcrumb-item"><a href="/User_Profile.cshtml">User</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Employee Profile</li>
                        </ol>
                    </nav>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-4">
                    <div class="card mb-4">
                        <div class="card-body text-center">
                            <img src="~/img/alex_male.png" alt="avatar" class="rounded-circle img-fluid" style="width: 150px;">
                            <h5 class="my-3">
                                <span id="idName">@Context.Session.GetString("Employeeusername")</span>
                                <span> - </span>
                                <span id="employeeId">@Context.Session.GetString("EmployeeuserID")</span>
                            </h5>
                            <p class="text-muted mb-1">Full Stack Developer</p>

                        </div>

                    </div>
                    <div class="card mb-4">
                        <div class="card-body">
                            <p class="mb-4"><span class="text-primary font-italic me-1">Personal Details</span> <a href="#">Edit</a></p>
                            <div class="row">

                                <div class="col-sm-5">
                                    <p class="mb-0">Full Name</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Context.Session.GetString("empfullname")</p>

                                </div>
                            </div>
                            <hr>

                            <hr>
                            <div class="row">
                                <div class="col-sm-5">
                                    <p class="mb-0">Email</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Context.Session.GetString("empemail")</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-5">
                                    <p class="mb-0">Phone</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">(097) @Context.Session.GetString("empmobile")</p>
                                </div>
                            </div>
                            <hr>

                            <div class="row">
                                <div class="col-sm-5">
                                    <p class="mb-0">Address</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Context.Session.GetString("empaddress")</p>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-lg-8">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5>Name Pronunce Helper</h5>
                            <div class="row">
                                <div class="tab">
                                    <button class="tablinks active" onclick="openCity(event, 'idRec')">Pronunce Name</button>
                                    <button class="tablinks" onclick="openCity(event, 'idSign')">Sign Language</button>
                                    <button class="tablinks" onclick="openCity(event, 'idTrend')">Trend</button>
                                    <button class="tablinks" onclick="openCity(event, 'idSupport')">Support</button>
                                    <button class="tablinks" onclick="openCity(event, 'idHelp')">Help</button>
                                </div>

                                <div id="idRec" class="tabcontent" style="display: block;">

                                    <div class="pad sizepronounce r newfontstyle h4 text-dark">
                                        User's Name Pronunciation..<hr>
                                        <div class="row">

                                            <div class="col-sm-3">
                                                <label class="mb-0 switch">
                                                    <input type="checkbox" onclick="toggleFields()" id="togBtn">
                                                    <div class="slider round">
                                                        <!--ADDED HTML -->
                                                        <span class="on">User's Recorded Name</span>
                                                        <span class="off">User's Record Name</span>

                                                        <!--END-->
                                                    </div>
                                                </label>
                                            </div>
                                            <div class="col-sm-5" id="divlanguage">
                                                <select class="custom-select text-muted mb-0" id="language">
                                                    <option value="en_US" selected>
                                                        American English Pronunciation
                                                    </option>
                                                    <option value="en_GB">
                                                        British English pronunciation
                                                    </option>
                                                    <option value="en_IN">
                                                        Indian English pronunciation
                                                    </option>
                                                </select>
                                            </div>
                                            <div class="col-sm-3" id="divvoice">
                                                <select class="custom-select text-muted mb-0" id="voice">
                                                    <option value="VoiceGenderFemale" selected>
                                                        Female
                                                    </option>
                                                    <option value="VoiceGenderMale">
                                                        Male
                                                    </option>
                                                </select>
                                            </div>
                                            <div class="col-sm-3" id="slowDiv">
                                                <label class="mb-0 switch">
                                                    <input type="checkbox" id="btnSlow">
                                                    <div class="slider round">
                                                        <!--ADDED HTML -->
                                                        <span class="on">Slow</span>
                                                        <span class="off">Slow</span>

                                                        <!--END-->
                                                    </div>
                                                </label>
                                            </div>
                                            <div id="divMic" class="col-sm-2">
                                                <span></span>
                                                <button class="bttn" onclick="getNamePronouciation()">
                                                    <img src="~/img/sound.png"
                                                         alt="user" width="30" height="30">
                                                </button>
                                            </div>
                                            <div id="divPractice" class="col-sm-2" style="display: none;">
                                                <span></span>
                                                <button id="idvoicematch" disabled class="bttn" onclick="getNamePronouciation()">
                                                    <img src="~/img/sound.png"
                                                         alt="user" width="30" height="30">
                                                </button>
                                            </div>
                                        </div>
                                        <hr>

                                        <div class="row">
                                            <div class="col-sm-12 h4" id="usrPrfName">
                                                User's Preferred Name Pronunciation

                                                <button class="nwbttn mb-1" onclick="getPrffPronouciation()">
                                                    <img src="~/img/play.png"
                                                         alt="user" width="50" height="50">
                                                </button>
                                                <ul id="idUl" class="ulno-space">
                                                    <li>Preferred Name: <span id="idprfNm" style="color: #e21919;">@Context.Session.GetString("empprfname")</span></li>
                                                    <li>Preferred Language: <span id="idprflng" style="color: #e21919;">@Context.Session.GetString("empcountry")</span> </li>
                                                </ul>

                                            </div>

                                        </div><hr>
                                        <div class="row">
                                            <div class="col-sm-12 p-3">
                                                <div class="phonetcdiv" id="idphntc" style="display: none;">
                                                    <h1 class="hh1 h4"> Phonetics pronunciation in International Phonetic Alphabet ..... </h1>
                                                    <span class="green-background" id="speechToText"></span>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div id="idPreacticeVoice" class="pad sizenew r newfontstyle h4 text-dark" style="display:none">
                                        <div class="row">
                                            <div class="col-sm-9 h4">
                                                <span>Practice and Check Match</span>
                                                <button class="nwbttn mb-1" onclick="getPracticePronouciation()">
                                                    <img src="~/img/mic.png"
                                                         alt="user" width="30" height="30">
                                                </button>

                                            </div><hr>
                                        </div>
                                        <div class="row p-5">
                                            <div class="col-sm-7" style="margin-left: 150px;">
                                                <div id="idtext" role="progressbar" aria-valuenow="67" aria-valuemin="0" aria-valuemax="100" style="--value: 67; --pcolorValue: #369; --scolorValue: #adf"></div>

                                            </div>
                                        </div>



                                    </div>
                                </div>
                                <div id="idSign" class="tabcontent">

                                    <div class="pad sign r newfontstyle h4 text-dark">
                                        <div class="row">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <!--<button class="bttn submit" onclick="playPause()">Play/Pause</button>-->
                                                    <div class="row">
                                                        <span>
                                                            User's Preferred Name in Sign Language.. <span />
                                                            <button class="bttn" onclick="getSignPronouciation()">
                                                                <img src="~/img/sound.png" alt="user" width="30" height="30">
                                                            </button>
                                                        </span>
                                                    </div><hr>
                                                    <div class="row p-3">
                                                        <div class="col-sm-5 border bg-light rounded-3 p-0 ml-3">
                                                            <span class="" id="usrspeechToText"></span>
                                                        </div>
                                                        <div class="col-sm-2 border bg-light rounded-3 p-0 ml-1">
                                                            <span class="ml-3" id="KeysinAudio"></span>
                                                        </div>

                                                    </div>

                                                    <!--<input type="text" name="sen" class=" myborder" id="KeysinAudio" placeholder="">-->

                                                </div>
                                            </div>
                                            <div class="row p-3">
                                                <div class="col-sm-12">
                                                    <video id="videoPlayer" width="730" height="400" preload="auto" autoplay>
                                                        <source src="~/videos/Hello.mp4" type="video/mp4">
                                                        Your browser does not support HTML5 video.
                                                    </video>
                                                </div>
                                            </div>


                                        </div>
                                    </div>

                                </div>

                                <div id="idTrend" class="tabcontent">
                                    <div class="pad sizepronounce r newfontstyle h4 text-dark">
                                        Trending on HowToPronounce : <span id="idTrendspan">@Context.Session.GetString("Employeeusername")</span><hr>
                                        <script src="https://code.highcharts.com/highcharts.js"></script>
                                        <script src="https://code.highcharts.com/highcharts-more.js"></script>
                                        <script src="https://code.highcharts.com/modules/exporting.js"></script>

                                        <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>

                                    </div>


                                </div>
                                <div id="idSupport" class="tabcontent">
                                    <div class="pad sizepronounce r newfontstyle h3 text-dark">
                                        Support .. <hr>
                                        <p class="h5">For any support please reach out to ZionTeam@wellsfargo.com</p>
                                    </div>
                                </div>
                                <div id="idHelp" class="tabcontent">
                                    <div class="pad sizepronounce r newfontstyle h3 text-dark">
                                        Help .. <hr>
                                        <p class="h5">To add your name pronounciation on your profile from your Laptop VDI.</p>
                                        <ul id="idUl" class="ulno-space">
                                            <li class="h6" style="color: #e21919;">Open Name Pronunciation portal.</li>
                                            <li class="h6" style="color: #e21919;">Login to your profile in Teamworks.</li>
                                            <li class="h6" style="color: #e21919;">Navigate to User Profile to edit your details.</li>
                                            <li class="h6" style="color: #e21919;">Navigate your Name pronounce helper to record your preferred name.</li>
                                            <li class="h6" style="color: #e21919;">Record your name with Sign Language, Voice Recording and by entering text.</li>
                                            <li class="h6" style="color: #e21919;">Search with AD/ENT User ID for an employee.</li>
                                            <li class="h6" style="color: #e21919;">Employee Profile page can show you Name Pronounce Helper to listen employee's preferred name.</li>
                                            <li class="h6" style="color: #e21919;">Admin can login to the portal with OKTA authentication to manage user's pronunciation.</li>

                                        </ul>
                                    </div>
                                </div>

                                <script>function openCity(evt, idName) {
                                        var i, tabcontent, tablinks;
                                        tabcontent = document.getElementsByClassName("tabcontent");
                                        for (i = 0; i < tabcontent.length; i++) {
                                            tabcontent[i].style.display = "none";
                                        }

                                        tablinks = document.getElementsByClassName("tablinks");
                                        for (i = 0; i < tablinks.length; i++) {
                                            tablinks[i].className = tablinks[i].className.replace(" active", "");
                                        }
                                        document.getElementById(idName).style.display = "block";
                                        evt.currentTarget.className += " active";
                                    }</script>

                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </section>

    <script>async function getPracticePronouciation() {


            const username = document.getElementById("idName").innerHTML;
            const employeeId = document.getElementById("employeeId").textContent;

            let endpoint = "";

            endpoint = new URL("http://127.0.0.1:5000/practice?employeeId=" + employeeId);
            getData(endpoint)
                .then(data => {
                    console.log(data);
                    if (parseFloat(data) > 65.0) {
                        document.getElementById("idtext").style.setProperty('--value', data);

                        document.getElementById("idtext").style.setProperty('--pcolorValue', '#035417');
                        document.getElementById("idtext").style.setProperty('--scolorValue', '#6ef08d');
                    }
                    else if (parseFloat(data) > 60.0) {
                        document.getElementById("idtext").style.setProperty('--value', data);

                        document.getElementById("idtext").style.setProperty('--pcolorValue', '#b0a010');
                        document.getElementById("idtext").style.setProperty('--scolorValue', '#f5e767');
                    }
                    else {
                        document.getElementById("idtext").style.setProperty('--value', data);

                        document.getElementById("idtext").style.setProperty('--pcolorValue', '#ed4a18');
                        document.getElementById("idtext").style.setProperty('--scolorValue', '#f0b59e');
                    }

                });


        }

        async function getPrffPronouciation() {


            const username = document.getElementById("idprfNm").innerHTML;
            const employeeId = document.getElementById("employeeId").textContent;
            const pronouceChoice = document.getElementById("togBtn").checked;
            let slctdLang = "";


            switch (document.getElementById("idprflng").innerHTML) {
                case "Preferred Sign Language":
                    let selectlang = document.getElementById('language');
                    slctdLang = selectlang.options[selectlang.selectedIndex].value;
                    break;
                case "American English Pronunciation":
                    slctdLang = "en_US";
                    break;
                case "British English Pronunciation":
                    slctdLang = "en_IN";
                    break;
                case "Indian English Pronunciation":
                    slctdLang = "en_GB";
                    break;
                default:
                    slctdLang = "en_US";
                    // code block
                    break;
            }
            let slctVc = document.getElementById('voice');
            let selectdVoice = slctVc.options[slctVc.selectedIndex].value;
            const soundChoice = document.getElementById("btnSlow").checked;
            let endpoint = "";
            if (!pronouceChoice) {

                endpoint = new URL("http://127.0.0.1:5000/standard?username=" + username + "&employeeId=" + employeeId
                    + "&language=" + slctdLang
                    + "&voice=" + selectdVoice + "&slow=" + soundChoice);
            }
            else {
                endpoint = new URL("http://127.0.0.1:5000/users?employeeId=" + employeeId);
            }
            getData(endpoint)
                .then(data => {
                    console.log(data);
                    let myArray = new Array();
                    if (!pronouceChoice) {
                        myArray = username.split("");
                        document.getElementById("speechToText").innerHTML = data;
                        document.getElementById("idphntc").style.display = "block";
                        document.getElementById('idPreacticeVoice').style.display = 'none';
                    }
                    else {
                        myArray = data.split("");
                        document.getElementById('speechToText').innerHTML = data;
                        document.getElementById("idphntc").style.display = "block";//KeysinAudio
                        document.getElementById('idPreacticeVoice').style.display = 'block';
                    }

                });


        }


        async function getNamePronouciation() {


            const username = document.getElementById("idName").innerHTML;
            const employeeId = document.getElementById("employeeId").textContent;
            const pronouceChoice = document.getElementById("togBtn").checked;
            let selectlang = document.getElementById('language');
            let slctdLang = selectlang.options[selectlang.selectedIndex].value;
            let slctVc = document.getElementById('voice');
            let selectdVoice = slctVc.options[slctVc.selectedIndex].value;
            const soundChoice = document.getElementById("btnSlow").checked;
            let endpoint = "";
            if (!pronouceChoice) {

                endpoint = new URL("http://127.0.0.1:5000/standard?username=" + username + "&employeeId=" + employeeId
                    + "&language=" + slctdLang
                    + "&voice=" + selectdVoice + "&slow=" + soundChoice);
            }
            else {
                endpoint = new URL("http://127.0.0.1:5000/users?employeeId=" + employeeId);
            }
            getData(endpoint)
                .then(data => {
                    console.log(data);
                    let myArray = new Array();
                    if (!pronouceChoice) {
                        myArray = username.split("");
                        document.getElementById("speechToText").innerHTML = data;
                        document.getElementById("idphntc").style.display = "block";
                        document.getElementById('idPreacticeVoice').style.display = 'none';
                    }
                    else {
                        myArray = data.split("");
                        document.getElementById('speechToText').innerHTML = data;
                        document.getElementById("idphntc").style.display = "block";//KeysinAudio
                        document.getElementById('idPreacticeVoice').style.display = 'block';
                    }

                });


        }
        async function getSignPronouciation() {


            const username = document.getElementById("idName").innerHTML;
            const employeeId = document.getElementById("employeeId").textContent;
            let endpoint = new URL("http://127.0.0.1:5000/usersSignLang?employeeId=" + employeeId);

            getData(endpoint)
                .then(data => {
                    console.log(data);
                    let myArray = new Array();
                    myArray = data.split("");
                    document.getElementById("usrspeechToText").style.fontSize = "large";
                    document.getElementById('usrspeechToText').innerHTML = data.toUpperCase(); //KeysinAudio

                    arr = myArray.filter(function (entry) { return entry.trim() != ''; });
                    play(arr);
                    function play(arr) {
                        var videoSource = new Array();
                        var videos = arr;
                        var j;
                        for (j = 0; j < videos.length; j++) {
                            videoSource[j] = "/videos/" + videos[j].toUpperCase() + ".mp4";
                        }

                        var i = 0; // define i
                        var videoCount = videoSource.length;

                        function videoPlay(videoNum) {
                            document.getElementById('KeysinAudio').innerHTML = videos[videoNum].toUpperCase(); //KeysinAudio
                            document.getElementById("KeysinAudio").style.color = "#e21919";
                            document.getElementById("KeysinAudio").style.fontSize = "xxx-large";

                            document.getElementById("videoPlayer").setAttribute("src", videoSource[videoNum]);
                            document.getElementById("videoPlayer").load();
                            document.getElementById("videoPlayer").play();

                        }
                        document.getElementById('videoPlayer').addEventListener('ended', myHandler, false);
                        document.getElementById('KeysinAudio').innerHTML = videos[0].toUpperCase(); //KeysinAudio
                        document.getElementById("KeysinAudio").style.color = "#e21919";
                        document.getElementById("KeysinAudio").style.fontSize = "xxx-large";
                        //document.getElementById("list").getElementsByTagName("li")[0].style.fontSize = "xx-large";

                        videoPlay(0); // play the video

                        function myHandler() {
                            i++;
                            if (i == videoCount) {

                                document.getElementById("videoPlayer").pause();
                            }
                            else {

                                videoPlay(i);
                            }
                        }
                    }

                });


        }
        async function getData(url = '') {
            var data = ''
            // Default options are marked with *
            const response = await fetch(url, {
                method: 'GET',
                mode: 'cors',
                cache: 'no-cache',
                credentials: 'same-origin',
                headers: {
                    'Content-Type': 'text/plain'
                    // 'Content-Type': 'application/x-www-form-urlencoded',
                },
                redirect: 'follow'
            }).then(response => {
                return response.text()
            }).then(text => {
                console.log(text)
                data = text
            });
            return data;
        }

        function toggleFields() {
            var checkbox = document.getElementById('togBtn');
            if (checkbox.checked === true) {
                document.getElementById('divlanguage').style.display = 'none';
                document.getElementById('divvoice').style.display = 'none';
                document.getElementById('slowDiv').style.display = 'none';
                document.getElementById('divMic').style.display = 'none';
                document.getElementById('divPractice').style.display = 'inline-block';
                document.getElementById('idphntc').style.display = 'none';
                document.getElementById('usrPrfName').style.display = 'none';

                document.getElementById('idPreacticeVoice').style.display = 'inline-block';


                const employeeId = document.getElementById("employeeId").textContent;
                let endpoint = new URL("http://127.0.0.1:5000/downloadBlob?employeeId=" + employeeId);

                getData(endpoint)
                    .then(data => {
                        console.log(data);
                        document.getElementById('idvoicematch').removeAttribute("disabled");
                    });

            }
            else {
                document.getElementById('idphntc').style.display = 'none';
                document.getElementById('usrPrfName').style.display = 'block';
                document.getElementById('divlanguage').style.display = 'inline-block';
                document.getElementById('divvoice').style.display = 'inline-block';
                document.getElementById('slowDiv').style.display = 'inline-block';
                document.getElementById('divMic').style.display = 'inline-block';
                document.getElementById('divPractice').style.display = 'none';

            }
        }</script>

</body>
</html>

